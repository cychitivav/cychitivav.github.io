---
import Moon from "../assets/icons/Moon.astro"
import Sun from "../assets/icons/Sun.astro"
import PC from "../assets/icons/PC.astro"
---

<header {...Astro.props}>
	<nav>
		<div class="hamburger">
			<span></span>
			<span></span>
			<span></span>
		</div>

		<span class="underline"></span>
		<ul>
			<li><a href="#">Home</a></li>
			<li><a href="#about">About Me</a></li>
			<li><a href="#experience">Experience</a></li>
			<li><a href="#projects">Projects</a></li>
			<li><a href="#contact" class="contact">Get in Touch</a></li>
		</ul>

		<div class="theme-switcher">
			<button title="Toggle theme"><Moon /></button>

			<div class="options">
				<button title="Light">
					<Sun />
				</button>
				<button title="Dark">
					<Moon />
				</button>
				<button title="System">
					<PC />
				</button>
			</div>
		</div>
	</nav>
</header>

<style lang="scss">
	nav {
		display: flex;
		align-items: center;
		justify-content: space-between;

		position: fixed;
		top: 2.5vh;
		right: 2.5vw;
		z-index: 2;

		--animation-time: 0.3s;
	}

	ul {
		display: flex;
		align-items: center;
		justify-content: flex-end;
		border-radius: 1.5em;
		overflow: hidden;
		padding: 5px;
		padding-left: 10px;

		animation: backdrop 1s ease-in both;
		animation-timeline: scroll();
		animation-range: 0 100px;
	}

	li {
		display: contents;
		list-style: none;
	}

	a:not(.contact) {
		padding: 5px 10px;
	}

	a.contact {
		border: 1px solid #fff;
		border-radius: 1em;
		padding: 5px 15px;
		margin-left: 10px;
		transition: all var(--animation-time) ease-in;

		&:hover {
			background-color: #fff;
			color: #000;
		}
	}

	.underline {
		width: 0;
		height: 2px;
		background-color: transparent;
		align-self: flex-end;
		position: absolute;
		transition:
			left var(--animation-time) ease-in-out,
			width var(--animation-time) ease-in-out;
		z-index: 100;
		background: linear-gradient(90deg, #004236, #2f8872, #004236);
		transform: translateX(-50%);
	}

	.theme-switcher {
		display: flex;
		align-items: center;
		gap: 1rem;
		position: relative;

		button {
			display: flex;
			flex-direction: row-reverse;
			align-items: center;
			justify-content: center;

			background-color: transparent;
			color: #000;

			border: none;
			border-radius: 50%;

			padding: 20%;
			aspect-ratio: 1;
			height: 2rem;
			overflow: hidden;

			cursor: pointer;
			transition:
				color 0.3 ease-in,
				background-color 0.3 ease-in;

			svg {
				width: 100%;
				height: 100%;
				fill: currentColor;
				flex: 0 0 auto;
			}
		}

		&:hover .options {
			button {
				height: 1.5rem;

				@for $i from 1 through 3 {
					&:nth-child(#{$i}) {
						transition-delay: $i * 0.1s;
					}
				}
			}
		}

		.options {
			position: absolute;
			top: 100%;
			right: 50%;
			transform: translateX(50%);

			display: flex;
			flex-direction: column;
			align-items: center;
			gap: 0.5rem;

			button {
				height: 0;
				background-color: #000;
				color: #fff;
				transition: height 0.2s ease-in;

				&:first-child {
					margin-top: 0.5rem;
				}

				&:last-child {
					margin-bottom: 0.5rem;
				}

				&:hover {
					background-color: #dadada;
					color: #000;
				}
			}

			@for $i from 1 through 3 {
				button:nth-last-child(#{$i}) {
					transition-delay: $i * 0.1s;
				}
			}
		}
	}

	@media (prefers-color-scheme: dark) {
		.theme-switcher button {
			filter: invert(1);
		}
	}

	@keyframes backdrop {
		0% {
			backdrop-filter: blur(0);
			background: #b4b4b400;
		}

		100% {
			background: #b4b4b42b;
			backdrop-filter: blur(10px);
		}
	}

	@media (width <= 768px) {
		.underline {
			display: none;
		}

		ul {
			position: fixed;
			top: 0;
			right: 0;
			left: 0;
			bottom: 0;
			z-index: 2;
			padding: 5vh 5vw;

			display: flex;
			flex-direction: column;
			align-items: flex-start;
			justify-content: flex-end;
			gap: 2rem;

			background-color: #000;
			color: #fff;
			border-radius: 0;

			transform: translateX(100%);
			transition: transform var(--animation-time) ease-in;
			animation: none;

			a {
				font-size: 1.5rem;

				opacity: 0;
				transform: translateY(1em);
				transition:
					opacity var(--animation-time) ease-in,
					transform 10s ease-in;
			}
		}

		.theme-switcher {
			position: fixed;
			top: 0;
			left: 0;
			padding: 2.5vh 5vw;
			z-index: 3;
			opacity: 0;
			height: 0;

			transition: all var(--animation-time) ease-in;

			& > button {
				padding: 0;
			}

			&:hover .options {
				button {
					height: 2rem;
				}
			}
		}

		.hamburger {
			display: flex;
			flex-direction: column;
			justify-content: space-between;
			align-items: flex-start;
			z-index: 3;
			margin-left: auto;

			width: 35px;
			height: 25px;
			cursor: pointer;
			transition: transform var(--animation-time) ease-in;

			span {
				display: block;
				width: 25px;
				height: 3px;
				background-color: #fff;
				transition: all var(--animation-time) ease-in;

				&:nth-child(odd) {
					align-self: flex-end;
				}
			}
		}

		.hamburger.open {
			span:nth-child(1) {
				transform: translate(-5px, 6.5px) rotate(45deg);
				width: 15px;
			}

			span:nth-child(2) {
				transform: rotateY(180deg);
			}

			span:nth-child(3) {
				transform: translate(-5px, -6.5px) rotate(-45deg);
				width: 15px;
			}

			~ ul {
				transform: translateX(0);

				@for $i from 1 through 5 {
					li:nth-child(#{$i}) a {
						opacity: 1;
						transform: translateY(0);

						$delay: $i * 0.1s;
						transition:
							opacity var(--animation-time) ease-in,
							transform var(--animation-time) ease-in;
						transition-delay: $delay;
					}
				}
			}

			~ .theme-switcher {
				opacity: 1;
				height: auto;
			}
		}
	}

	@media (prefers-color-scheme: light) {
		ul {
			color: #000;
		}

		a.contact {
			border-color: #000;

			&:hover {
				background-color: #000;
				color: #fff;
			}
		}

		nav:has(li:not(:last-child):hover) .underline {
			background: linear-gradient(90deg, #004236, #2f8872, #004236);
		}

		.hamburger span {
			background-color: #000;
		}

		@media (width <= 768px) {
			ul {
				background-color: #fff;
			}
		}
	}
</style>

<script is:inline data-astro-rerun>
	const links = document.querySelectorAll("nav ul li:not(:last-child) a")

	const underline = document.querySelector(".underline")
	const hamburger = document.querySelector(".hamburger")

	links.forEach((link) => {
		link.addEventListener("mouseover", () => {
			underline.style.left = `${link.offsetLeft + link.offsetWidth / 2}px`
			underline.style.width = `${link.offsetWidth}px`
		})

		link.addEventListener("click", () => {
			hamburger.classList.remove("open")
		})
	})

	underline.parentElement.addEventListener("mouseleave", () => (underline.style.width = "0"))

	hamburger.addEventListener("click", () => {
		hamburger.classList.toggle("open")
	})
</script>
